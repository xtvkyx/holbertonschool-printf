.TH _printf 3
.SH NAME
_printf \- formatted output conversion
.SH SYNOPSIS
.B #include "main.h"
.sp
.BI "int _printf(const char *" format ", ...);"
.SH DESCRIPTION
The \fB_printf\fR function writes output to the standard output stream,
stdout, according to the \fIformat\fR string and additional arguments.
The \fIformat\fR string is composed of zero or more directives: ordinary
characters (which are copied unchanged to the output) and conversion
specifications.
.sp
The conversion specifiers supported are:
.TP
.B %c
The \fBint\fR argument is converted to an \fBunsigned char\fR, and the
resulting character is written.
.TP
.B %s
The \fBconst char *\fR argument is expected to be a pointer to a string
(array of characters). Characters from the string are written until a
terminating null byte (\e0) is encountered.
.TP
.B %d, %i
The \fBint\fR argument is converted to a signed decimal number and printed.
.TP
.B %%
A literal '%' character is written. No argument is converted.
.SH RETURN VALUE
Upon successful return, these functions return the number of characters
printed (excluding the null byte used to end output to strings).
.sp
If the \fIformat\fR string is NULL, or if the function encounters an error
condition such as a lone trailing '%', it returns -1.
.SH AUTHORS
